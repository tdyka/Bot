from telebot import types
from database import db

user_carts = {}


def add_to_cart(telegram_id: int, product_name: str, quantity: int = 1):
    """–î–æ–¥–∞—î —Ç–æ–≤–∞—Ä –≤ –∫–æ—à–∏–∫"""
    product = db.get_product_by_name(product_name)
    if not product:
        return False

    if telegram_id not in user_carts:
        user_carts[telegram_id] = []

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ç–æ–≤–∞—Ä –≤–∂–µ –≤ –∫–æ—à–∏–∫—É
    for item in user_carts[telegram_id]:
        if item['product_id'] == product['id']:
            item['quantity'] += quantity
            return True

    # –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä
    user_carts[telegram_id].append({
        'product_id': product['id'],
        'name': product['name'],
        'price': product['price'],
        'quantity': quantity
    })
    return True


def remove_from_cart(telegram_id: int, product_name: str):
    """–í–∏–¥–∞–ª—è—î —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞"""
    if telegram_id not in user_carts:
        return False

    user_carts[telegram_id] = [
        item for item in user_carts[telegram_id]
        if item['name'] != product_name
    ]
    return True


def clear_cart(telegram_id: int):
    """–û—á–∏—â–∞—î –∫–æ—à–∏–∫"""
    if telegram_id in user_carts:
        user_carts[telegram_id] = []


def get_cart(telegram_id: int):
    """–û—Ç—Ä–∏–º—É—î –∫–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    return user_carts.get(telegram_id, [])


def get_cart_total(telegram_id: int):
    """–†–∞—Ö—É—î –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∫–æ—à–∏–∫–∞"""
    cart = get_cart(telegram_id)
    return sum(item['price'] * item['quantity'] for item in cart)


def show_cart(bot, chat_id, telegram_id):
    """–ü–æ–∫–∞–∑—É—î –∫–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    cart = get_cart(telegram_id)

    if not cart:
        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton("üçï –î–æ –º–µ–Ω—é", callback_data="back_main")
        )
        bot.send_message(chat_id, "üõí –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π", reply_markup=markup)
        return

    # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    message = "üõí –í–∞—à –∫–æ—à–∏–∫:\n\n"

    for item in cart:
        total_price = item['price'] * item['quantity']
        message += f"‚Ä¢ {item['name']}\n"
        message += f"  {item['quantity']} —à—Ç √ó {item['price']} –≥—Ä–Ω = {total_price} –≥—Ä–Ω\n\n"

    total = get_cart_total(telegram_id)
    message += f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
    message += f"üí∞ –†–∞–∑–æ–º: {total} –≥—Ä–Ω"

    markup = types.InlineKeyboardMarkup(row_width=2)

    for item in cart:
        markup.add(
            types.InlineKeyboardButton(
                f"‚ùå {item['name']}",
                callback_data=f"remove_{item['name']}"
            )
        )

    markup.add(
        types.InlineKeyboardButton("üóë –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫", callback_data="clear_cart"),
        types.InlineKeyboardButton("‚úÖ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="checkout")
    )
    markup.add(
        types.InlineKeyboardButton("‚¨ÖÔ∏è –î–æ –º–µ–Ω—é", callback_data="back_main")
    )

    bot.send_message(chat_id, message, reply_markup=markup)


def show_checkout(bot, chat_id, telegram_id):
    """–ü–æ–∫–∞–∑—É—î —Ñ–æ—Ä–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"""
    cart = get_cart(telegram_id)

    if not cart:
        bot.send_message(chat_id, "–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!")
        return

    total = get_cart_total(telegram_id)

    message = "üìù –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n\n"
    message += f"üí∞ –°—É–º–∞: {total} –≥—Ä–Ω\n\n"
    message += "–í–∏–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏:"

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üí≥ –ö–∞—Ä—Ç–∫–æ—é –æ–Ω–ª–∞–π–Ω", callback_data="pay_card"),
        types.InlineKeyboardButton("üíµ –ì–æ—Ç—ñ–≤–∫–æ—é –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ", callback_data="pay_cash")
    )
    markup.add(
        types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∫–æ—à–∏–∫–∞", callback_data="view_cart")
    )

    bot.send_message(chat_id, message, reply_markup=markup)


def process_payment(bot, chat_id, telegram_id, payment_method):
    """–û–±—Ä–æ–±–ª—è—î –æ–ø–ª–∞—Ç—É (—Ñ–µ–π–∫–æ–≤–∞)"""
    cart = get_cart(telegram_id)

    if not cart:
        bot.send_message(chat_id, "–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!")
        return

    if payment_method == "card":
        # –Ü–º—ñ—Ç–∞—Ü—ñ—è –æ–ø–ª–∞—Ç–∏ –∫–∞—Ä—Ç–∫–æ—é
        show_fake_payment(bot, chat_id, telegram_id)
    else:
        # –ì–æ—Ç—ñ–≤–∫–∞ - –æ–¥—Ä–∞–∑—É —Å—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        create_order_from_cart(bot, chat_id, telegram_id, "cash")


def show_fake_payment(bot, chat_id, telegram_id):
    """–ü–æ–∫–∞–∑—É—î —Ñ–µ–π–∫–æ–≤—É —Ñ–æ—Ä–º—É –æ–ø–ª–∞—Ç–∏"""
    total = get_cart_total(telegram_id)

    message = "üí≥ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–∫–æ—é\n\n"
    message += f"üí∞ –î–æ —Å–ø–ª–∞—Ç–∏: {total} –≥—Ä–Ω\n\n"
    message += "üîí –ë–µ–∑–ø–µ—á–Ω–∞ –æ–ø–ª–∞—Ç–∞\n"
    message += "–í–≤–µ–¥—ñ—Ç—å –¥–∞–Ω—ñ –∫–∞—Ä—Ç–∫–∏:\n\n"
    message += "üì± –¶–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∞ –æ–ø–ª–∞—Ç–∞\n"
    message += "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è —ñ–º—ñ—Ç–∞—Ü—ñ—ó –æ–ø–ª–∞—Ç–∏"

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("‚úÖ –û–ø–ª–∞—Ç–∏—Ç–∏", callback_data="confirm_payment"),
        types.InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="view_cart")
    )

    bot.send_message(chat_id, message, reply_markup=markup)


def create_order_from_cart(bot, chat_id, telegram_id, payment_method):
    """–°—Ç–≤–æ—Ä—é—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –∫–æ—à–∏–∫–∞ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –ª–æ–≥–∞–º–∏"""
    import time

    cart = get_cart(telegram_id)
    if not cart:
        bot.send_message(chat_id, "–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!")
        return

    # –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ë–î, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
    bot_user = bot.get_chat(telegram_id)
    db.add_user(
        telegram_id,
        username=bot_user.username if hasattr(bot_user, "username") else None,
        first_name=bot_user.first_name if hasattr(bot_user, "first_name") else None,
        last_name=bot_user.last_name if hasattr(bot_user, "last_name") else None
    )

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏
    valid_items = []
    for item in cart:
        product = db.get_product_by_name(item['name'])
        if product:
            valid_items.append(item)
        else:
            bot.send_message(chat_id, f"‚ö†Ô∏è –¢–æ–≤–∞—Ä {item['name']} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π, –≤—ñ–Ω –±—É–¥–µ –ø—Ä–æ–ø—É—â–µ–Ω–∏–π.")

    if not valid_items:
        bot.send_message(chat_id, "‚ùå –£—Å—ñ —Ç–æ–≤–∞—Ä–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ñ –∞–±–æ –≤–∏–¥–∞–ª–µ–Ω—ñ.")
        return

    # –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    order_number = f"ORD{int(time.time())}"

    # –õ–æ–≥ –¥–ª—è –¥–µ–±–∞–≥—É
    print(f"Creating order for Telegram ID: {telegram_id}")
    print(f"Order number: {order_number}")
    print(f"Items: {valid_items}")

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –ë–î
    order_id = db.create_order(telegram_id, order_number, valid_items)

    if not order_id:
        bot.send_message(chat_id, "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
        return


    clear_cart(telegram_id)

    total = sum(item['price'] * item['quantity'] for item in valid_items)
    payment_text = "üí≥ –ö–∞—Ä—Ç–∫–æ—é –æ–Ω–ª–∞–π–Ω" if payment_method == "card" else "üíµ –ì–æ—Ç—ñ–≤–∫–æ—é –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ"

    message = "‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ!\n\n"
    message += f"üì¶ –ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: #{order_number}\n"
    message += f"üí∞ –°—É–º–∞: {total} –≥—Ä–Ω\n"
    message += f"üí≥ –û–ø–ª–∞—Ç–∞: {payment_text}\n\n"
    message += "üîî –ú–∏ –Ω–∞–¥—ñ—à–ª–µ–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω—É —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üì¶ –í—ñ–¥—Å—Ç–µ–∂–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data=f"order_status_{order_number}"),
        types.InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_main")
    )

    bot.send_message(chat_id, message, reply_markup=markup)

    from orders import simulate_delivery
    simulate_delivery(bot, order_number)


def handle_cart_callback(bot, call, action, data=None):
    """–û–±—Ä–æ–±–ª—è—î –≤—Å—ñ callback –≤—ñ–¥ –∫–æ—à–∏–∫–∞"""
    telegram_id = call.from_user.id
    chat_id = call.message.chat.id

    if action == "view":
        bot.answer_callback_query(call.id)
        show_cart(bot, chat_id, telegram_id)

    elif action == "clear":
        clear_cart(telegram_id)
        bot.answer_callback_query(call.id, "üóë –ö–æ—à–∏–∫ –æ—á–∏—â–µ–Ω–æ")
        show_cart(bot, chat_id, telegram_id)

    elif action == "checkout":
        bot.answer_callback_query(call.id)
        show_checkout(bot, chat_id, telegram_id)

    elif action == "pay_card":
        bot.answer_callback_query(call.id)
        process_payment(bot, chat_id, telegram_id, "card")

    elif action == "pay_cash":
        bot.answer_callback_query(call.id, "‚úÖ –û—Ñ–æ—Ä–º–ª—é—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è...")
        process_payment(bot, chat_id, telegram_id, "cash")

    elif action == "confirm_payment":
        bot.answer_callback_query(call.id, "‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–∞!")
        create_order_from_cart(bot, chat_id, telegram_id, "card")

    elif action == "remove" and data:
        remove_from_cart(telegram_id, data)
        bot.answer_callback_query(call.id, f"‚ùå {data} –≤–∏–¥–∞–ª–µ–Ω–æ")
        show_cart(bot, chat_id, telegram_id)
