from telebot import types
from database import db


def show_salad_list(bot, chat_id):
    """–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ —Å–∞–ª–∞—Ç—ñ–≤ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    salad_items = db.get_products_by_category("–°–∞–ª–∞—Ç–∏")

    if not salad_items:
        bot.send_message(chat_id, "–°–∞–ª–∞—Ç–∏ –ø–æ–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ")
        return

    markup = types.InlineKeyboardMarkup(row_width=2)

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Å–∞–ª–∞—Ç—É –∑ –ë–î
    salad_buttons = []
    for item in salad_items:
        salad_buttons.append(
            types.InlineKeyboardButton(
                item['name'],
                callback_data=f"salad_{item['id']}"
            )
        )

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥–æ–∫
    for i in range(0, len(salad_buttons), 2):
        if i + 1 < len(salad_buttons):
            markup.add(salad_buttons[i], salad_buttons[i + 1])
        else:
            markup.add(salad_buttons[i])

    markup.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_main"))
    bot.send_message(chat_id, "–û–±–µ—Ä—ñ—Ç—å —Å–∞–ª–∞—Ç ü•ó:", reply_markup=markup)


def send_salad_card(bot, call, salad_id):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∫–∞—Ä—Ç–∫—É —Å–∞–ª–∞—Ç—É –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    salad = db.get_product_by_id(salad_id)

    if not salad:
        bot.answer_callback_query(call.id, "‚ùå –°–∞–ª–∞—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    bot.answer_callback_query(call.id)

    caption = f"{salad['name']} ‚Äì {salad['price']} –≥—Ä–Ω\n{salad['description']}"

    markup = types.InlineKeyboardMarkup()
    # –ü–µ—Ä—à–∏–π —Ä—è–¥–æ–∫: –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫
    markup.add(
        types.InlineKeyboardButton("üõí –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫", callback_data=f"add_cart_{salad['name']}")
    )
    # –î—Ä—É–≥–∏–π —Ä—è–¥–æ–∫: –ö—É–ø–∏—Ç–∏ –Ω–∞ —Å–∞–π—Ç—ñ —ñ –ù–∞–∑–∞–¥
    markup.add(
        types.InlineKeyboardButton("üü¢ –ö—É–ø–∏—Ç–∏ –Ω–∞ —Å–∞–π—Ç—ñ üü¢",
                                   url=f"https://example.com/product/{salad['name'].lower().replace(' ', '-')}"),
        types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_salad")
    )
    # –¢—Ä–µ—Ç—ñ–π —Ä—è–¥–æ–∫: –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    markup.add(
        types.InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_main")
    )

    try:
        if salad['image_url']:
            bot.send_photo(
                call.message.chat.id,
                salad['image_url'],
                caption=caption,
                reply_markup=markup
            )
        else:
            bot.send_message(call.message.chat.id, caption, reply_markup=markup)
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —Å–∞–ª–∞—Ç—É: {e}")
        bot.send_message(call.message.chat.id, caption, reply_markup=markup)


def handle_salad_callback(bot, call, salad_id):
    """–û–±—Ä–æ–±–ª—è—î callback –¥–ª—è —Å–∞–ª–∞—Ç—ñ–≤ –∑ –ë–î"""
    # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤ int, —è–∫—â–æ —Ü–µ —Ä—è–¥–æ–∫
    if isinstance(salad_id, str):
        salad_id = int(salad_id)

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Å–∞–ª–∞—Ç
    salad = db.get_product_by_id(salad_id)

    if not salad:
        bot.answer_callback_query(call.id, "‚ùå –°–∞–ª–∞—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    # –ü–µ—Ä–µ–¥–∞—î–º–æ ID
    send_salad_card(bot, call, salad_id)