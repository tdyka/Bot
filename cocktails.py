from telebot import types
from database import db


def show_cocktail_list(bot, chat_id):
    """–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –∫–æ–∫—Ç–µ–π–ª—ñ–≤ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    cocktails = db.get_products_by_category("–ù–∞–ø–æ—ó")

    if not cocktails:
        bot.send_message(chat_id, "–ö–æ–∫—Ç–µ–π–ª—ñ –ø–æ–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ")
        return

    markup = types.InlineKeyboardMarkup(row_width=2)

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ–∫—Ç–µ–π–ª—é –∑ –ë–î
    cocktail_buttons = []
    for cocktail in cocktails:
        cocktail_buttons.append(
            types.InlineKeyboardButton(
                cocktail['name'],
                callback_data=f"cocktail_{cocktail['id']}"
            )
        )

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥–æ–∫
    for i in range(0, len(cocktail_buttons), 2):
        if i + 1 < len(cocktail_buttons):
            markup.add(cocktail_buttons[i], cocktail_buttons[i + 1])
        else:
            markup.add(cocktail_buttons[i])

    markup.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_main"))
    bot.send_message(chat_id, "–û–±–µ—Ä—ñ—Ç—å –∫–æ–∫—Ç–µ–π–ª—å üçπ:", reply_markup=markup)


def send_cocktail_card(bot, call, cocktail_id):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∫–∞—Ä—Ç–∫—É –∫–æ–∫—Ç–µ–π–ª—é –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    cocktail = db.get_product_by_id(cocktail_id)

    if not cocktail:
        bot.answer_callback_query(call.id, "‚ùå –ö–æ–∫—Ç–µ–π–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    bot.answer_callback_query(call.id)

    caption = f"{cocktail['name']} ‚Äì {cocktail['price']} –≥—Ä–Ω\n{cocktail['description']}"

    markup = types.InlineKeyboardMarkup()
    # –ü–µ—Ä—à–∏–π —Ä—è–¥–æ–∫: –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫
    markup.add(
        types.InlineKeyboardButton("üõí –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫", callback_data=f"add_cart_{cocktail['name']}")
    )
    # –î—Ä—É–≥–∏–π —Ä—è–¥–æ–∫: –ö—É–ø–∏—Ç–∏ –Ω–∞ —Å–∞–π—Ç—ñ —ñ –ù–∞–∑–∞–¥
    markup.add(
        types.InlineKeyboardButton("üü¢ –ö—É–ø–∏—Ç–∏ –Ω–∞ —Å–∞–π—Ç—ñ üü¢",
                                   url=f"https://example.com/product/{cocktail['name'].lower().replace(' ', '-')}"),
        types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_cocktail")
    )
    # –¢—Ä–µ—Ç—ñ–π —Ä—è–¥–æ–∫: –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
    markup.add(
        types.InlineKeyboardButton("üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="back_main")
    )

    try:
        if cocktail['image_url']:
            bot.send_photo(
                call.message.chat.id,
                cocktail['image_url'],
                caption=caption,
                reply_markup=markup
            )
        else:
            bot.send_message(call.message.chat.id, caption, reply_markup=markup)
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –∫–æ–∫—Ç–µ–π–ª—é: {e}")
        bot.send_message(call.message.chat.id, caption, reply_markup=markup)


def handle_cocktail_callback(bot, call, cocktail_id):
    """–û–±—Ä–æ–±–ª—è—î callback –¥–ª—è –∫–æ–∫—Ç–µ–π–ª—ñ–≤ –∑ –ë–î"""
    # cocktail_id –≤–∂–µ —î —á–∏—Å–ª–æ–º –∑ main.py
    if isinstance(cocktail_id, str):
        cocktail_id = int(cocktail_id)

    cocktail = db.get_product_by_id(cocktail_id)

    if not cocktail:
        bot.answer_callback_query(call.id, "‚ùå –ö–æ–∫—Ç–µ–π–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    send_cocktail_card(bot, call, cocktail_id)